<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>istio on yefengzhichen&#39;s blog</title>
    <link>https://yefengzhichen.github.io/tags/istio/</link>
    <description>Recent content in istio on yefengzhichen&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 08 May 2023 18:46:11 +0800</lastBuildDate><atom:link href="https://yefengzhichen.github.io/tags/istio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Istio 灰度发布</title>
      <link>https://yefengzhichen.github.io/post/istio_release/</link>
      <pubDate>Mon, 08 May 2023 18:46:11 +0800</pubDate>
      
      <guid>https://yefengzhichen.github.io/post/istio_release/</guid>
      <description>灰度发布介绍 灰度发布，又名金丝雀发布（canary release、canary launch 或 canary deployment ），是指在黑与白之间，能够平滑过渡的一种发布方式。是指</description>
    </item>
    
    <item>
      <title>Istio dns 原理详解</title>
      <link>https://yefengzhichen.github.io/post/istio_dns/</link>
      <pubDate>Wed, 29 Mar 2023 09:55:25 +0800</pubDate>
      
      <guid>https://yefengzhichen.github.io/post/istio_dns/</guid>
      <description>问题背景 在之前使用 ServiceEntry 和 EnvoyFilter 来接入 dubbo 服务到 istio 中时，最开始一直疑惑，当 consumer 端使用 ServiceEntry 中的 host 去访问，但 EnvoyFilter 中直接使用的是 addresses 和端口来进行过滤器匹配的，下发的</description>
    </item>
    
    <item>
      <title>手动接入 dubbo 到 istio</title>
      <link>https://yefengzhichen.github.io/post/istio_dubbo_manual/</link>
      <pubDate>Wed, 22 Mar 2023 16:03:22 +0800</pubDate>
      
      <guid>https://yefengzhichen.github.io/post/istio_dubbo_manual/</guid>
      <description>整体流程 这里以 dubbo 官方示例 中的 dubbo-samples-zookeeper 示例代码为基础，实现这样的功能： provider 和 consumer 以镜像方式部署在 kubernetes 中，并接入 istio 代理 通过 ServiceEntry 来确定提供方，provider 和</description>
    </item>
    
    <item>
      <title>Istio dubbo协议支持</title>
      <link>https://yefengzhichen.github.io/post/istio_dubbo_registry/</link>
      <pubDate>Tue, 28 Feb 2023 11:34:07 +0800</pubDate>
      
      <guid>https://yefengzhichen.github.io/post/istio_dubbo_registry/</guid>
      <description>背景 需求场景是，将 dubbo2 框架的应用迁移到 istio 网格中，dubbo2 使用的注册中心可能有 zookeeper、nacos、etcd，这里对 dubbo 接入网格的几</description>
    </item>
    
    <item>
      <title>Istio pilot-agent 源码解析</title>
      <link>https://yefengzhichen.github.io/post/istio_pilot_agent_src/</link>
      <pubDate>Fri, 03 Feb 2023 18:46:11 +0800</pubDate>
      
      <guid>https://yefengzhichen.github.io/post/istio_pilot_agent_src/</guid>
      <description>pilot-agent 源码 整体流程 整体逻辑如下图，简单来说分为以下几步： pilot-agent 启动后，生成私钥和 CSR（证书签名请求），用 CSR 请求 istiod 获取工作负载证书，ROOTCA 根证</description>
    </item>
    
    <item>
      <title>Istio 多集群模型和部署示例</title>
      <link>https://yefengzhichen.github.io/post/istio_multicluster/</link>
      <pubDate>Thu, 12 Jan 2023 19:15:55 +0800</pubDate>
      
      <guid>https://yefengzhichen.github.io/post/istio_multicluster/</guid>
      <description>多集群部署模型 根据官网的 部署模型说明，istio 部署时，在下面四个纬度都可以进行自由选择： 单一或多个集群 单一或多个网络 单一或多控制平面 单一或</description>
    </item>
    
    <item>
      <title>Istio 多协议、多注册中心支持调研</title>
      <link>https://yefengzhichen.github.io/post/istio_multi_protocols_multi_registries/</link>
      <pubDate>Wed, 11 Jan 2023 14:30:26 +0800</pubDate>
      
      <guid>https://yefengzhichen.github.io/post/istio_multi_protocols_multi_registries/</guid>
      <description>问题背景 在大规模现网环境中使用 istio 等服务网格，通常会因为技术栈的不同遇到一些痛点，这里就以 istio 为例，比如： istio 如何对接各种外部注册中心：如 Cons</description>
    </item>
    
    <item>
      <title>Istio 安装和示例实践</title>
      <link>https://yefengzhichen.github.io/post/istio_demo/</link>
      <pubDate>Thu, 05 Jan 2023 19:23:49 +0800</pubDate>
      
      <guid>https://yefengzhichen.github.io/post/istio_demo/</guid>
      <description>安装 需要先准备一个 kubernetes 集群，这里是用的 k3s 安装 的 1.25 版本。 下载 istio 先下载 istio 安装文件，执行： 1 curl -L https://istio.io/downloadIstio | sh - 如果测试机器下载不了，可以手动下载脚本和安装</description>
    </item>
    
  </channel>
</rss>
